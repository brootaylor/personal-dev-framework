
/* ==========================================================================
   Grid
   ========================================================================== */


// A simple grid that isn't class dependent
.grid {
  @include clearfix-me(micro);

  .col {
    @include break-point(560px) {
      float: left;
      width: calculate-width(2);

      &:nth-child(2n+1) {
        clear: left;
      }
    }

    @include break-point(768px) {
      width: calculate-width(3);

      &:nth-child(n) {
        clear: none;
      }
      &:nth-child(3n+1) {
        clear: left;
      }
    }

    @include break-point(1024px) {
      width: calculate-width(4);

      &:nth-child(n) {
        clear: none;
      }
      &:nth-child(4n+1) {
        clear: left;
      }
    }
  }
}
///////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////
// Inspiration from http://css-tricks.com/dont-overthink-it-grids/
///////////////////////////////////////////////////////////////////


// @function calculate-width ($col-span) {
// 	@return 100% / $col-span; // Worked out relative to 100% width
// }

// // Grid container
// .row {
//   @include clearfix-me(micro);

//   @include break-point(480px) {
//     margin: pxToEm(0 0 20px 0, $base-font-size);
//   }

// 	[class*='col-'] {

//       @include break-point(480px) {
//         float: left;
//         padding-right: pxToEm(20px, $base-font-size);
//       }

//   		&:last-of-type { // Last column in grid...
//   			padding-right: 0;
//   		}
// 	}

// }

// /* Opt-in outside padding */
// .row-pad {

//   @include break-point(480px) {
//     padding: pxToEm(20px 0 20px 20px, $base-font-size);
//   }

//   [class*='col-']:last-of-type {

//     @include break-point(480px) {
//       padding-right: 20px;
//       padding-right: pxToEm(20px, $base-font-size);
//     }
//   }
// }

// // Column widths
// .col-1-2 {
//     width: calculate-width(2); // spans 1 of 2 columns, width = 50%
//     width: calc(100% / 2); // Future-proofing (Make into SASS function)
// }
 
// .col-1-3 {
//     width: calculate-width(3); // spans 1 of 3 columns, width = 33.33333%
//     width: calc(100% / 3); // Future-proofing (Make into SASS function)
// }

// .col-2-3 {
//     width: calculate-width(3/2); // spans 2 of 3 columns, width = 66.66667%
// }

// .col-1-4 {
//     width: calculate-width(1); // spans 1 of 4 columns, width = 25%

//     @include break-point(480px) {
//       width: calculate-width(2);
//     }
//     @include break-point(560px) {
//       width: calculate-width(3);
//     }
//     @include break-point(640px) {
//       width: calculate-width(4);
//     }
// }

// .col-3-4 {
//     width: calculate-width(4/3); // spans 3 of 4 columns, width = 75%
// }

// .col-1-5 {
//     width: calculate-width(5); // spans 1 of 5 columns, width = 20%
// }

// .col-2-5 {
//     width: calculate-width(5/2); // spans 2 of 5 columns, width = 40%
// }

// .col-3-5 {
//     width: calculate-width(5/3); // spans 3 of 5 columns, width = 60%
// }

// .col-4-5 {
//     width: calculate-width(5/4); // spans 4 of 5 columns, width = 80%
// }

// .col-1-6 {
//     width: calculate-width(6); // spans 1 of 6 columns, width = 16.66667%
// }

// .col-5-6 {
//     width: calculate-width(6/5); // spans 5 of 6 columns, width = 83.33333%
// }

//////////////////////////////////////////////////////////////////////////

