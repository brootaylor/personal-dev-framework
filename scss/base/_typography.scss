/* ==========================================================================
   Typography styles (Global).
   ========================================================================== */


/* FONTS VARIABLE CONFIG
============================================= */

// Base font size
$font-size-base: 16px;

// Base font colour
$font-color-base: lighten($black, 10%);

// Font families
$font-family-primary: "Open Sans", sans-serif, Arial, "Helvetica Neue", Helvetica; // 300,300i,400,400i,700,700i (Google Fonts used)
$font-family-secondary: Georgia, Times, "Times New Roman", serif;

// Font styles
$font-style-normal: normal;
$font-style-italic: italic;

// Font weights (primary custom font)
$font-weight-light: 300; // Light
$font-weight-regular: 400; // Regular
$font-weight-semi-bold: 600; // Semi bold
$font-weight-bold: 700; // Bold


// Global typography settings
//////////////////////////////

// https://bugsnag.com/blog/responsive-typography-with-rems
// http://hugogiraudel.com/2013/03/18/ultimate-rem-mixin/

html {
    color: light($black, 10%);
    background-color: $white;
    font-family: $font-family-primary;
    font-weight: $font-weight-light;
    font-style: $font-style-normal;
    font-size: $font-size-base;
    line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight: h5bp.com/i
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: lighten($blue, 40%);
    text-shadow: none;
}

::selection {
    background: lighten($blue, 40%);
    text-shadow: none;
}


///////////////////////////////////////////////////////////////////////////////////
/**
 * Convert font-size from px to rem with px fallback
 *
 * @param $size - the value in pixel you want to convert
 *
 * e.g. p {@include fontSize(12px);}
 * 
 */

// Function for converting a px based font-size to rem.
@function calculateRem($value) {
 $remValue: $value / $font-size-base;
 @return $remValue * 1rem;
}
// Mixin that will include the fall back px declaration as well as the calculated rem value.
@mixin fontSize($value) {
 font-size: $value;
 font-size: calculateRem($value);
}

///////////////////////////////////////////////////////////////////////////////////

/*

    16PX IN REMS, WOULD TAKE 16PX / 16PX = 1 >>> 1REM = 16PX
    18PX IN REMS, WOULD TAKE 18PX / 16PX = 1.125 >>> 1.125REM = 18PX
    20PX IN REMS, WOULD TAKE 20PX / 16PX = 1.25 >>> 1.25REM = 20PX
    22PX IN REMS, WOULD TAKE 22PX / 16PX = 1.375 >>> 1.375REM = 22PX
    24PX IN REMS, WOULD TAKE 24PX / 16PX = 1.5 >>> 1.5REM = 24PX
    26PX IN REMS, WOULD TAKE 26PX / 16PX = 1.625 >>> 1.625REM = 26PX
    28PX IN REMS, WOULD TAKE 28PX / 16PX = 1.75 >>> 1.75REM = 28PX
    30PX IN REMS, WOULD TAKE 30PX / 16PX = 1.875 >>> 1.875REM = 30PX

    etc......

*/

// Titles (Global)
///////////////////

h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: $font-weight-regular;
}
h1 {
    @include fontSize(26px);
    transition: font-size 0.2s linear;
    margin: pxToEm(0 0 15px 0, $font-size-base);

        @include break-point-min($bp-m) {
            @include fontSize(30px);
        }
        @include break-point-min($bp-l) {
            @include fontSize(34px);
        }
         
}
h2 {
    @include fontSize(22px);
    transition: font-size 0.2s linear;
    margin: pxToEm(10px 0 15px 0, $font-size-base);

        @include break-point-min($bp-m) {
            @include fontSize(26px);
        }
        @include break-point-min($bp-l) {
            @include fontSize(30px);
        }
}
h3 {
    @include fontSize(18px);
    transition: font-size 0.2s linear;
    margin: pxToEm(10px 0 15px 0, $font-size-base);

        @include break-point-min($bp-m) {
            @include fontSize(22px);
        }
        @include break-point-min($bp-l) {
            @include fontSize(26px);
        }
}
h4 {
    @include fontSize(16px);
    transition: font-size 0.2s linear;
    margin: pxToEm(10px 0 15px 0, $font-size-base);

        @include break-point-min($bp-m) {
            @include fontSize(20px);
        }
        @include break-point-min($bp-l) {
            @include fontSize(24px);
        }
}
h5 {
    @include fontSize(16px);
    transition: font-size 0.2s linear;
    margin: pxToEm(10px 0 15px 0, $font-size-base);

        @include break-point-min($bp-m) {
            @include fontSize(20px);
        }
        @include break-point-min($bp-l) {
            @include fontSize(24px);
        }
}
h6 {
    @include fontSize(16px);
    transition: font-size 0.2s linear;
    margin: pxToEm(10px 0 15px 0, $font-size-base);

        @include break-point-min($bp-m) {
            @include fontSize(20px);
        }
        @include break-point-min($bp-l) {
            @include fontSize(24px);
        }
}

// Paragraphs
///////////////////////////

p {
    margin: pxToEm(0 0 15px 0, $font-size-base);

        @include break-point-min($bp-m) {
            @include fontSize(18px);
            transition: font-size 0.2s linear;
        }
}

// Block quote
///////////////////////////

blockquote {
    margin: pxToEm(20px, $font-size-base);
    padding: pxToEm(0 15px, $font-size-base);
    position: relative;

        @include break-point-min($bp-m) {
            margin: pxToEm(20px 40px, $font-size-base);
            padding: pxToEm(0 30px, $font-size-base);
        }
        @include break-point-min($bp-l) {
            margin: pxToEm(20px 40px, $font-size-base);
        }

    &:before,
    &:after {
        @include fontSize(60px);
        transition: font-size 0.2s linear;
        display: block;
        position: absolute;
        color: #7a7a7a;
        line-height: 0;

            @include break-point-min($bp-m) {
                @include fontSize(70px);
            }
            @include break-point-min($bp-l) {
                @include fontSize(80px);
            }
    }
    &:before {
        content: "\201C";
        left: pxToEm(-2px, $font-size-base);
        top: pxToEm(5px, $font-size-base);
    }
    &:after {
        content: "\201D";
        right: pxToEm(-2px, $font-size-base);
        bottom: pxToEm(5px, $font-size-base);
    }
    p {
        @include fontSize(16px);
        transition: font-size 0.2s linear;
        font-style: italic;
        color: #4c7f01;

            @include break-point-min($bp-m) {
                @include fontSize(20px);
            }
            @include break-point-min($bp-l) {
                @include fontSize(24px);
            }
    }
    footer {
        margin: pxToEm(10px, $font-size-base);
        border: none;
        text-align: right;

            cite {
                @include fontSize(14px);
                transition: font-size 0.2s linear;
                display: inline;
                margin: 0;
                color: darken($grey, 30%);

                    @include break-point-min($bp-m) {
                        @include fontSize(16px);
                    }

            }
    }
}

// Article styles (Summary and full article / post)
////////////////////////////////////////////////////

.post,
.post-sum {
    // Awaiting styles
}

.post__header,
.post-sum__header  {
    margin-bottom: pxToEm(20px, $font-size-base);
}

.post__title,
.post-sum__title {
    margin-bottom: 0;
}

.post-sum__title {
    a,
    a:hover {
        text-decoration: none;
    }
}

.post__title-sub,
.post-sum__title-sub {
    margin-top: 0;
    margin-bottom: 0;
}

.post__meta,
.post-sum__meta {
    @include fontSize(14px);
    transition: font-size 0.2s linear;
    color: darken($grey, 30%);

        @include break-point-min($bp-l) {
            @include fontSize(16px);
        }
}

.post__time,
.post__extra,
.post-sum__time,
.post-sum__extra {
    padding-left: pxToEm(20px, $font-size-base);
    position: relative;

        &:before {
            content:'\007C';
            position: absolute;
            left: pxToEm(7px, $font-size-base);
            color: $grey;
        }
}

.post__location,
.post-sum__location {
    display: block;
}

// Article Introduction / Lead paragraph
.post__lead {
    @include fontSize(18px);
    transition: font-size 0.2s linear;
    font-weight: $font-weight-regular;

        @include break-point-min($bp-m) {
            @include fontSize(20px);
        }
        @include break-point-min($bp-l) {
            @include fontSize(22px);
        }
}

.post__related {
    background-color: lighten($grey, 10%);
    padding: pxToEm(15px, $font-size-base);
    margin-bottom: pxToEm(15px, $font-size-base);
}

.post__related-title {
    @include fontSize(22px);
    transition: font-size 0.2s linear;
    margin-bottom: pxToEm(10px, $font-size-base);

        @include break-point-min($bp-m) {
            @include fontSize(24px);
        }
        @include break-point-min($bp-l) {
            @include fontSize(26px);
        }
}

.post__footer {
    background-color: $grey;
    padding: pxToEm(15px, $font-size-base);
    margin-bottom: pxToEm(15px, $font-size-base);

    p {
        margin: 0;
        font-size: 95%;
    }
}

// Horizontal rule
///////////////////////////

hr {
    display: block;
    height: pxToEm(1px, $font-size-base);
    border: 0;
    border-top: pxToEm(1px, $font-size-base) solid darken($white, 70%);
    margin: pxToEm(15px 0, $font-size-base);
    padding: 0;
}

.hr__big {
    height: pxToEm(5px, $font-size-base);
    border-top-width: pxToEm(5px, $font-size-base);
    margin: pxToEm(40px 0, $font-size-base);
}

///////////////////////////////////////////////////


